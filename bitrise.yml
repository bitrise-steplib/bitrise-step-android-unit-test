format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - SAMPLE_REPO_GIT_CLONE_URL: https://github.com/bitrise-io/android-multiple-test-results-sample.git
  - SAMPLE_REPO_BRANCH: maintenance
  - SAMPLE_REPO_KOTLIN_GRADLE_URL: https://github.com/bitrise-io/android-gradle-kotlin-dsl.git
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test:
    steps:
    - git::https://github.com/bitrise-steplib/steps-check.git: { }
    after_run:
    - test-in-src-dir
    - test-in-src-dir-module-variant
    - test-in-root-tmp-dir
    - test-gradle-kts
    - check-testaddon-export

  test-in-src-dir:
    title: Test android project & mono repo projects in source dir
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: $SAMPLE_REPO_GIT_CLONE_URL
        - sample_app_branch: $SAMPLE_REPO_BRANCH
    - set-java-version:
        inputs:
        - set_java_version: "11"
    - install-missing-android-tools:
        inputs:
        - gradlew_path: ./gradlew
    - path::./:
        title: Android Unit Test (monorepo projects in source dir)
        inputs:
        - is_debug: "true"
        - arguments: --warn
    - bundle::check-artifacts: { }

  test-in-src-dir-module-variant:
    title: Test mono repo projects in source dir, module and variant set
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: $SAMPLE_REPO_GIT_CLONE_URL
        - sample_app_branch: $SAMPLE_REPO_BRANCH
    - set-java-version:
        inputs:
        - set_java_version: "11"
    - install-missing-android-tools:
        inputs:
        - gradlew_path: ./gradlew
    - path::./:
        title: Android Unit Test (monorepo in source dir, with module and variant set)
        inputs:
        - module: app
        - variant: DemoDebug
        - is_debug: "true"
    - bundle::check-artifacts: { }

  test-in-root-tmp-dir:
    title: Test android project & mono repo projects in /tmp dir
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: $SAMPLE_REPO_GIT_CLONE_URL
        - sample_app_branch: $SAMPLE_REPO_BRANCH
        - work_dir: /tmp/_tmp
    - set-java-version:
        inputs:
        - set_java_version: "11"
    - install-missing-android-tools:
        inputs:
        - gradlew_path: ./gradlew
    - path::./:
        title: Android Unit Test (android project & mono repo projects in /tmp dir)
        inputs:
        - is_debug: "true"
    - bundle::check-artifacts: { }

  test-gradle-kts:
    title: Test android project with build.gradle.kts
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: $SAMPLE_REPO_KOTLIN_GRADLE_URL
    - install-missing-android-tools:
        inputs:
        - gradlew_path: ./gradlew
    - path::./:
        title: Android Unit Test (android project with build.gradle.kts)
        inputs:
        - is_debug: "true"
    - bundle::check-artifacts: { }

  check-testaddon-export:
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: $SAMPLE_REPO_GIT_CLONE_URL
        - sample_app_branch: code-coverage
    - set-java-version:
        inputs:
        - set_java_version: "11"
    - install-missing-android-tools:
        inputs:
        - gradlew_path: ./gradlew
    - script:
        title: purge previous build artifacts
        inputs:
        - content: ./gradlew clean
    - script:
        title: purge test deploy dir (will always cause ignorable cli error)
        inputs:
        - content: rm -rf $BITRISE_TEST_DEPLOY_DIR/*
    - path::./:
        title: run step with predefined inputs
        inputs:
        - module: app
        - variant: Debug
        - is_debug: "true"
    - script:
        title: check exported artifacts
        is_always_run: true
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            # check directory and test-info.json existence
            if [ $(find ${BITRISE_TEST_DEPLOY_DIR} -regex ".*/app-debug/test-info.json" | grep -c .) -eq 0 ]; then
                echo "ERROR: ${BITRISE_TEST_DEPLOY_DIR} does not contain app-debug/test-info.json."
                exit 1
            fi

            # check result xml existence
            if [ ! $(find ${BITRISE_TEST_DEPLOY_DIR} -regex ".*/app-debug/TEST.*.xml" | grep -c .) -eq 2 ]; then
                echo "ERROR: ${BITRISE_TEST_DEPLOY_DIR} does not contain all test result XMLs."
                exit 1
            fi

  generate_readme:
    steps:
    - git::https://github.com/bitrise-steplib/steps-readme-generator.git@main: { }

step_bundles:
  setup-test-app:
    inputs:
    - sample_app_url:
    - sample_app_branch:
    - work_dir: $ORIG_BITRISE_SOURCE_DIR/_tmp
    steps:
    - script:
        inputs:
        - content: rm -rf $work_dir
    - change-workdir:
        title: cd  $work_dir
        inputs:
        - path: $work_dir
        - is_create_path: true
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - clone_into_dir: ./
        - repository_url: $sample_app_url
        - branch: $sample_app_branch

  check-artifacts:
    steps:
    - script:
        title: Check if files are existing
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            # without timestamps
            if [ ! -f $BITRISE_DEPLOY_DIR/another_app-reports.zip ]; then
                exit 1
            fi
            if [ ! -f $BITRISE_DEPLOY_DIR/app-reports.zip ]; then
                exit 1
            fi
            if [ ! -f $BITRISE_DEPLOY_DIR/another_app-test-results.zip ]; then
                exit 1
            fi
            if [ ! -f $BITRISE_DEPLOY_DIR/app-test-results.zip ]; then
                exit 1
            fi

            # with timestamps
            if [ ! -f $(ls $BITRISE_DEPLOY_DIR/another_app-reports-20*.zip) ]; then
                exit 1
            fi
            if [ ! -f $(ls $BITRISE_DEPLOY_DIR/app-reports-20*.zip) ]; then
                exit 1
            fi
            if [ ! -f $(ls $BITRISE_DEPLOY_DIR/another_app-test-results-20*.zip) ]; then
                exit 1
            fi
            if [ ! -f $(ls $BITRISE_DEPLOY_DIR/app-test-results-20*.zip) ]; then
                exit 1
            fi
