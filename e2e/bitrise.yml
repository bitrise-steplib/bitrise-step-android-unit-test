format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - ORIG_BITRISE_SOURCE_DIR: $BITRISE_SOURCE_DIR

workflows:
  test_in-src-dir:
    title: Test android project in source dir
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: https://github.com/bitrise-io/sample-apps-android-sdk22.git
        - sample_app_branch: master
    - path::./:
        inputs:
        - is_debug: "true"
        - arguments: --warn
    - bundle::check-artifacts:
        inputs:
        - variant: Debug
    - bundle::check-artifacts:
        inputs:
        - variant: Release

  test_in-src-dir-module-variant:
    title: Test android project in source dir, set module and variant
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: https://github.com/bitrise-io/sample-apps-android-sdk22.git
        - sample_app_branch: master
    - path::./:
        inputs:
        - module: app
        - variant: Debug
        - is_debug: "true"
    - bundle::check-artifacts:
        inputs:
        - module: app
        - variant: Debug

  test_gradle-kts:
    title: Test android project with build.gradle.kts
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: https://github.com/bitrise-samples/android-gradle-kotlin-dsl
        - sample_app_branch: master
    - path::./:
        inputs:
        - module: app
        - variant: Release
        - is_debug: "true"
    - bundle::check-artifacts:
        inputs:
        - module: app
        - variant: Release

  test_skip_testing:
    title: Test skip_testing input
    steps:
    - bundle::setup-test-app:
        inputs:
        - sample_app_url: https://github.com/bitrise-samples/android-gradle-kotlin-dsl.git
        - sample_app_branch: add-more-tests
    - path::./:
        inputs:
        - module: app
        - variant: debug
        - skip_testing: "org.gradle.kotlin.dsl.samples.androidstudio.ExampleUnitTest.addition_isCorrect"
    - script:
        title: Check if skipped tests are really skipped
        inputs:
        - content: |
            test_results_xml_path="./app/build/test-results/testDebugUnitTest/TEST-org.gradle.kotlin.dsl.samples.androidstudio.ExampleUnitTest.xml"
            if [ ! -f "$test_results_xml_path" ]; then
              echo "No test results xml found at: $test_results_xml_path"
              exit 1
            fi
            if grep -q '<testcase name="addition_isCorrect"' "$test_results_xml_path"; then
              echo "The skipped test was found in the test results xml."
              exit 1
            else
              echo "The skipped test was NOT found in the test results xml."
            fi

step_bundles:
  setup-test-app:
    inputs:
    - sample_app_url:
    - sample_app_branch:
    - work_dir: $ORIG_BITRISE_SOURCE_DIR/_tmp
    steps:
    - script:
        inputs:
        - content: rm -rf $work_dir; mkdir -p $work_dir
    - script:
        is_skippable: true
        inputs:
        - content: rm -rf $BITRISE_TEST_DEPLOY_DIR/*
    - change-workdir:
        title: cd  $work_dir
        inputs:
        - path: $work_dir
        - is_create_path: true
    - git::https://github.com/bitrise-steplib/bitrise-step-simple-git-clone.git:
        inputs:
        - clone_into_dir: ./
        - repository_url: $sample_app_url
        - branch: $sample_app_branch

  check-artifacts:
    inputs:
    - module: app
    - variant: Debug
    steps:
    - script:
        inputs:
        - content: |-
            #!/usr/bin/env bash
            set -ex

            # HTML results
            if [ ! -f $BITRISE_DEPLOY_DIR/${module}-tests.zip ]; then
                exit 1
            fi

            # XML results
            if [ ! -f $BITRISE_DEPLOY_DIR/${module}-test-results.zip ]; then
                exit 1
            fi

            ## Test Reporting
            # check directory and test-info.json existence
            if ! find "${BITRISE_TEST_DEPLOY_DIR}" -regex ".*/${module}-${variant}/test-info.json" >/dev/null 2>&1; then
              echo "test-info.json does not exist in ${BITRISE_TEST_DEPLOY_DIR}/.../${module}-${variant}/"
              exit 1
            fi

            # check result xml existence
            if ! find ${BITRISE_TEST_DEPLOY_DIR} -regex ".*/${module}-${variant}/TEST.*.xml" >/dev/null 2>&1; then
              echo "test_report XML file does not exist in ${BITRISE_TEST_DEPLOY_DIR}/.../${module}-${variant}/"
              exit 1
            fi
